# AUTOGENERATED! DO NOT EDIT! File to edit: ../../C1W1_Assignment.ipynb.

# %% auto 0
__all__ = ['house_model']

# %% ../../C1W1_Assignment.ipynb 2
import tensorflow as tf
import numpy as np

# %% ../../C1W1_Assignment.ipynb 3
# GRADED FUNCTION: house_model
def house_model():
    ### START CODE HERE
    
    # Define input and output tensors with the values for houses with 1 up to 6 bedrooms
    # Hint: Remember to explictly set the dtype as float
    xs = np.arange(1,7,dtype=float)
    ys = np.arange(1, 5, .5,dtype=float)[:6]
    
    # Define your model (should be a model with 1 dense layer and 1 unit)
    model = tf.keras.Sequential([
        tf.keras.layers.Dense(1, input_shape=[1])
    ])
    
    # Compile your model
    # Set the optimizer to Stochastic Gradient Descent
    # and use Mean Squared Error as the loss function
    model.compile(optimizer='sgd', loss='mse')
    
    # Train your model for 1000 epochs by feeding the i/o tensors
    model.fit(xs, ys, epochs=100)
    
    ### END CODE HERE
    return model
